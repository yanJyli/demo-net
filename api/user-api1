/* eslint-disable semi */
import fetch from 'node-fetch';

const apiBase = 'http://localhost:3000';

const Endpoints = {
	users: '/users',
	id: '/id'
};
//GET
const getUsers = async () => {
	const response = await fetch(`${apiBase}${Endpoints.users}`);
	const users = await response.json();

	return users;
};
//POST
const addUser = async (user) => {
	const newUserResponse = await fetch(`${apiBase}${Endpoints.users}`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json;charset=utf-8' },
		body: JSON.stringify(user),
	});

	const result = await newUserResponse.json();
	return result;
};

//DELETE
//const deleteUser = (id) => {};
const deleteUser = async (id) => {
	const newUserResponse = await fetch(`${apiBase}${Endpoints.users}${Endpoints.id}`, {
		method: 'DELETE',
	});
	const result = await newUserResponse.json();
	return result;
};

// PUT
//const replaceUser = (id, newUser) => {};
const replaceUser = async (user, id) => {
	const newUserResponse = await fetch(`${apiBase}${Endpoints.users}${Endpoints.id}`, {
		method: 'PUT',
		headers: { 'Content-Type': 'application/json;charset=utf-8' },
		body: JSON.stringify(user),
	});

	const result = await newUserResponse.json();
	return result;
};

// PATCH
//const updateUser = (id, newUserFields) => {};
const updateUser = async (user, id) => {
	const newUserResponse = await fetch(`${apiBase}${Endpoints.users}${Endpoints.id}`, {
		method: 'PATCH',
		headers: { 'Content-Type': 'application/json;charset=utf-8' },
		body: JSON.stringify(user),
	});

	const result = await newUserResponse.json();
	return result;
};

export { getUsers, addUser, deleteUser, replaceUser, updateUser };

// add 10 - 30 random users
// delete 5 random users
// show oldest and youngest users
// replace 5 random users to random users
// show oldest and youngest users
// update 5 random users (random field for each user)
// show oldest and youngest users
// list all users in alphabet order. Sort by last name then by first name

// repeat 5 times on the same database 
